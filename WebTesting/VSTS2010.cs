using Fiddler;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Windows.Forms;

namespace Fiddler.WebTesting
{
	[ProfferFormat("OpPlan 4 Visual Studio WebTest", "Parameterized SAML request. OpPlan 4 XML WebTest file supported by Microsoft Visual Studio WebTest 2010+.")]
	public class VSTS2010 : ISessionExporter, IDisposable
	{
		public VSTS2010()
		{
		}

		public void Dispose()
		{
		}

		private void EnsureVSTSAddons()
		{
		}

		public bool ExportSessions(string sFormat, Session[] oSessions, Dictionary<string, object> dictOptions, EventHandler<ProgressCallbackEventArgs> evtProgressNotifications)
		{

			bool flag;
			if (sFormat != "OpPlan 4 Visual Studio WebTest")
			{
				return false;
			}
			bool bResult = false;
			string sFilename = null;
			if (dictOptions != null && dictOptions.ContainsKey("Filename"))
			{
				sFilename = dictOptions["Filename"] as string;
			}
			if (string.IsNullOrEmpty(sFilename))
			{
				sFilename = Utilities.ObtainSaveFilename(string.Concat("Export As ", sFormat), "OpPlan 4 SAML parameterized token Visual Studio WebTest (*.webtest)|*.webtest");
			}
			if (string.IsNullOrEmpty(sFilename))
			{
				return bResult;
			}
			this.EnsureVSTSAddons();
			bool bPromptForPlugins = true;
			bool bIncludeAutoGeneratedComments = true;
			if (dictOptions != null)
			{
				if (dictOptions.ContainsKey("PluginPrompt") && ((string)dictOptions["PluginPrompt"]).ToLower() == "false")
				{
					bPromptForPlugins = false;
				}
				if (dictOptions != null && dictOptions.ContainsKey("IncludeAutoGeneratedComments") && ((string)dictOptions["IncludeAutoGeneratedComments"]).ToLower() == "false")
				{
					bIncludeAutoGeneratedComments = false;
				}
			}
			try
			{
				List<PluginClassReference> plugins = (new AssemblyHelper(FiddlerApplication.Prefs.GetStringPref("fiddler.config.path.webtestexport.plugins", string.Concat(CONFIG.GetPath("Transcoders_User"), "VSWebTestPlugins")))).FindAvailablePlugins();
				FiddlerWebTest webTest = new FiddlerWebTest(oSessions);
				if (bPromptForPlugins)
				{
					frmSelectPlugins frmPlugins = new frmSelectPlugins(plugins);
					frmPlugins.cbAllowAutoComments.Checked = bIncludeAutoGeneratedComments;
					if (DialogResult.OK != frmPlugins.ShowDialog())
					{
						frmPlugins.Dispose();
						flag = false;
						return flag;
					}
					else
					{
						webTest.LoadPlugins(frmPlugins.SelectedPlugins);
						webTest.Save(sFilename, evtProgressNotifications, frmPlugins.cbAllowAutoComments.Checked);
						frmPlugins.Dispose();
					}
				}
				else
				{
					webTest.LoadPlugins(plugins);
					webTest.Save(sFilename, evtProgressNotifications, bIncludeAutoGeneratedComments);
				}
				flag = true;
			}
			catch (Exception exception)
			{
				FiddlerApplication.ReportException(exception, "Failed to save test");
				flag = false;
			}
			return flag;
		}
	}
}